name: CI
on:
  pull_request:
  push:
    paths:
      - "apps/web/**"
    branches: [main]

permissions: write-all

env:
  CACHED_DEPENDENCY_PATHS: ${{ github.workspace }}/.yarn/unplugged
  CACHED_BUILD_PATHS: ${{ github.workspace }}/apps/web/.next
  BUILD_CACHE_KEY: ${{ github.sha }}
  DEFAULT_NODE_VERSION: "16"

jobs:
  job_install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Compute dependency cache key
        id: compute_lockfile_hash
        run: echo "::set-output name=hash::${{ hashFiles('yarn.lock') }}"

      - name: Check dependency cache
        uses: actions/cache@v3
        id: cache_dependencies
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit == false
        run: yarn install --immutable
    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}

  job_build:
    name: Build
    needs: [job_install_dependencies]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Check dependency cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.job_install_dependencies.outputs.dependency_cache_key }}

      - name: Check build cache
        uses: actions/cache@v3
        id: cache_built_packages
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}

      - name: Set up environment variables for .env.production
        env:
          ENV_PROD_CONTENT: ${{ secrets.ENV_PROD_CONTENT }}
        run: echo "$ENV_PROD_CONTENT" > .env.production

      - name: Build
        if: steps.cache_built_packages.outputs.cache-hit == false
        run: yarn run ahhachul build

    outputs:
      dependency_cache_key: ${{ needs.job_install_dependencies.outputs.dependency_cache_key }}

  job_continuous_integration:
    runs-on: ubuntu-latest
    name: Check lint
    needs: [job_install_dependencies]

    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Check dependency cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.job_install_dependencies.outputs.dependency_cache_key }}

      - name: Check Lint
        if: github.event_name != 'push'
        run: yarn run ahhachul lint

  job_nextjs_bundle_analysis:
    name: Nextjs bundle analysis
    runs-on: ubuntu-latest
    needs: [job_build]
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Check dependency cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.job_build.outputs.dependency_cache_key }}

      - name: Check build cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}

      - name: Analyze bundle sizes
        uses: transferwise/actions-next-bundle-analyzer@master
        with:
          workflow-id: ci.yml
          base-branch: main
          working-directory: apps/web
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
